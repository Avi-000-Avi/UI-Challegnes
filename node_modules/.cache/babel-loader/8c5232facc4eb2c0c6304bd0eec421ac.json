{"ast":null,"code":"var _jsxFileName = \"/home/avinash/Documents/UI Challenges/src/context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst INITIAL_STATE = {\n  darkMode: true\n};\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        darkMode: !state.darkMode\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ThemeProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"ih+Vd9fHXqjzC8XFlo5K5uS4lm8=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/avinash/Documents/UI Challenges/src/context.js"],"names":["createContext","useReducer","ThemeContext","INITIAL_STATE","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAuBC,UAAvB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,YAAY,gBAAIF,aAAa,EAAnC;AAEP,MAAMG,aAAa,GAAG;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAO;AAACJ,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAAlB,OAAP;;AACJ;AACI,aAAOE,KAAP;AAJR;AAMH,CAPD;;AASA,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,YAAD,EAAeF,aAAf,CAApC;AAEA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAD;AAAQK,MAAAA;AAAR,KAA9B;AAAA,cAAkDD,KAAK,CAACE;AAAxD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CANM;;GAAMH,a;;KAAAA,a","sourcesContent":["import { createContext,useReducer} from \"react\";\n\nexport const ThemeContext  = createContext();\n\nconst INITIAL_STATE = {darkMode:true};\n\nconst themeReducer = (state,action) => {\n    switch(action.type){\n        case \"TOGGLE\":\n            return {darkMode: !state.darkMode};\n        default:\n            return state;\n    }\n};\n\nexport const ThemeProvider = (props) => {\n    const [state, dispatch] = useReducer(themeReducer, INITIAL_STATE)\n\n    return (\n        <ThemeContext.Provider value={{state, dispatch}}>{props.children}</ThemeContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}